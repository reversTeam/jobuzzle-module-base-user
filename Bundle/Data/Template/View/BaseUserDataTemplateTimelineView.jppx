/**************************************************************
*     ####         #                               #          * Jobuzzle - Copyright All rights reserved
*     ####         #                               #          *
*       ##  #####  ######  #     # ####### ####### #  #####   * @Author: revers
*       ## #     # #     # #     #      #       #  # #     #  *
*       ## #     # #     # #     #     #       #   # #     #  * @Date:   2015-08-08 11:12:48
*       ## #     # #     # #     #    #       #    # #     #  *
*       ## #     # #     # #     #   #       #     # ######   * @Last Modified by:   revers
*  ####### #     # #     # #     #  #       #      # #        *
*  ######   #####   ######  #####  ####### ####### # #######  * @Last Modified time: 2015-11-10 01:51:57
**************************************************************/

class BaseUserDataTemplateTimelineView extends DataDataTemplateTimelineView {

	initialize : function (props, context) {
		_super(props, context);
		this._idElement = BaseUserDataTemplateTimelineView.elem_number++;
	}

	public initialState : function () {
		var state = _super();


		return state;
	}

	public displayFooter : function () {
		var t = serviceLocator.get('Translator');
		return <div className="footer">
			{t.translate('baseuser.timeline.baseuser')}
		</div>;
	}

	public display : function () {
		var self = this;
		var router = serviceLocator.get('Router');
		var entity = this.state['entity'];
		var searchTemplate = this.getSearchTemplate();

		return (
			<div className="baseuser timeline" data-url={this.getUrl()} onClick={this.link}>
				{entity.displayMiniature()}
				<div className="user-bottom-info">
					{ entity.getFirstname() || entity.getLastname()
						? <span className="username">{entity.getFirstname() +' '+ entity.getLastname()}</span>
						: <span className="username"></span>
					}
				</div>
				{this.displayFooter()}
			</div>
		);
	}

}