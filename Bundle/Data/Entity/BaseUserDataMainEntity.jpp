/**************************************************************
*     ####         #                               #          * Jobuzzle - Copyright All rights reserved
*     ####         #                               #          *
*       ##  #####  ######  #     # ####### ####### #  #####   * @Author: revers
*       ## #     # #     # #     #      #       #  # #     #  *
*       ## #     # #     # #     #     #       #   # #     #  * @Date:   2015-08-08 11:12:48
*       ## #     # #     # #     #    #       #    # #     #  *
*       ## #     # #     # #     #   #       #     # ######   * @Last Modified by:   revers
*  ####### #     # #     # #     #  #       #      # #        *
*  ######   #####   ######  #####  ####### ####### # #######  * @Last Modified time: 2015-08-08 16:40:54
**************************************************************/

class BaseUserDataMainEntity extends DataDataMainEntity {

	_type = 'BaseUser';
	_templateTimeline = 'baseuser_data_timeline_template';
	_templateMiniature = 'baseuser_data_miniature_template';

	#default get, set for _firstname;
	#default get, set for _lastname;
	#default get, set for _username;
	#default get, set for _picture;
	#default get, set for _lang;


	/**
	* Initialize base user entity, add :
	* firstname, lastname, username, lang
	**/
	initialize : function () {
		_super();

		this._firstname = undefined;
		this._lastname = undefined;
		this._username = undefined;
		this._lang = undefined;
	}

	/**
	* Hydrate new attribute
	**/
	public hydrate : function (datas) {
		_super(datas);

		if (datas.firstname)
			this.setFirstname(datas.firstname);
		if (datas.lastname)
			this.setLastname(datas.lastname);
		if (datas.username)
			this.setUsername(datas.username);
		if (datas.lang)
			this.setLang(datas.lang);
		if (datas.picture)
			this.setPicture(datas.picture);
		return this;
	}

	/**
	* Search in firstname and lastname
	**/
	search : function (params) {
		var reg = new RegExp(params, 'i');

		return (
			_super(params)
			|| reg.test(this.getFirstname())
			|| reg.test(this.getLastname())
			|| reg.test(this.getFirstname() +' '+ this.getLastname())
			|| reg.test(this.getLastname() +' '+ this.getFirstname())
		);
	}

	/**
	* Check if base user == current user
	**/
	isMe : function () {
		return this.getId() == serviceLocator.get('ServiceManager').get('user_manager_main_service').getMeId();
	}
}