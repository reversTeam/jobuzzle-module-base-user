/**************************************************************
*     ####         #                               #          * Jobuzzle - Copyright All rights reserved
*     ####         #                               #          *
*       ##  #####  ######  #     # ####### ####### #  #####   * @Author: revers
*       ## #     # #     # #     #      #       #  # #     #  *
*       ## #     # #     # #     #     #       #   # #     #  * @Date:   2015-08-08 11:12:48
*       ## #     # #     # #     #    #       #    # #     #  *
*       ## #     # #     # #     #   #       #     # ######   * @Last Modified by:   revers
*  ####### #     # #     # #     #  #       #      # #        *
*  ######   #####   ######  #####  ####### ####### # #######  * @Last Modified time: 2015-09-20 16:44:06
**************************************************************/

class BaseUserDataMainEntity extends DataDataMainEntity {

	public _type = 'BaseUser';
	public _templateTimeline = 'baseuser_data_timeline_template';
	public _templateMiniature = 'baseuser_data_miniature_template';

	/**
	* Initialize base user entity, add :
	* firstname, lastname, username, lang
	**/
	initialize : function () {
		_super();

		this['_firstname'] = undefined;
		this['_lastname'] = undefined;
		this['_username'] = undefined;
		this['_picture'] = undefined;
		this['_lang'] = undefined;
	}

	/**
	* Hydrate new attribute
	**/
	public hydrate : function (datas) {
		_super(datas);
		if (datas['firstname'])
			this.setFirstname(datas['firstname']);
		if (datas['lastname'])
			this.setLastname(datas['lastname']);
		if (datas['username'])
			this.setUsername(datas['username']);
		if (datas['lang'])
			this.setLang(datas['lang']);
		if (datas['picture'])
			this.setPicture(datas['picture']);
		return this;
	}

	/**
	* Search in firstname and lastname
	**/
	search : function (params) {
		var reg = new RegExp(params, 'i');

		return (
			_super(params)
			|| reg.test(this.getFirstname())
			|| reg.test(this.getLastname())
			|| reg.test(this.getFirstname() +' '+ this.getLastname())
			|| reg.test(this.getLastname() +' '+ this.getFirstname())
		);
	}

	/**
	* Check if base user == current user
	**/
	public isMe : function () {
		return this['getId']() == serviceLocator.get('ServiceManager').get('user_manager_main_service').getMeId();
	}

	public getFirstname : function () {
		return this['_firstname'];
	}

	public setFirstname : function (firstname) {
		this['_firstname'] = firstname;

		return this;
	}

	public getLastname : function () {
		return this['_lastname'];
	}

	public setLastname : function (lastname) {
		this['_lastname'] = lastname;

		return this;
	}

	public getUsername : function () {
		return this['_username'];
	}

	public setUsername : function (username) {
		this['_username'] = username;

		return this;
	}

	public getPicture : function () {
		return this['_picture'];
	}

	public setPicture : function (picture) {
		this['_picture'] = picture;

		return this;
	}

	public getLang : function () {
		return this['_lang'];
	}

	public setLang : function (lang) {
		this['_lang'] = lang;

		return this;
	}
}